<?php

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\UrlHelper;
use Drupal\views\Views;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Url;
use Drupal\paragraphs\Entity\Paragraph;


/*function hotel_inventory_getData($form_state){

	$current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $hotel = $current_user->get('field_hotel')->first()->getValue()['target_id'];
    $final_service_term = $form_state->getValue('final_services');

    $arg[] = $hotel;
    $arg[] = $final_service_term;

    $view = Views::getView('hotel_inventory');
    $view->setArguments($arg);
    $view->setDisplay('hotel_inventory');
    $view->preExecute();
    $view->execute();
    $result = $view->result;

    return $result[0]->_entity;
}*/

function remaining_quantity_and_target_id($form_state){

    $data = [];

    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $hotel_id = $current_user->get('field_hotel')->first()->getValue()['target_id'];
    $service_id = $form_state->getValue('final_services');

    $entity_ids = \Drupal::entityQuery('node')
      ->condition('type', 'hotel_inventory')
      ->condition('field_hotel_name', $hotel_id)
      ->execute();

    $hotel_nid = reset($entity_ids);//fetch first record in case of multiple

    $node_data = \Drupal::entityManager()->getStorage('node')->load($hotel_nid);

    $para = $node_data->field_quantity_by_service->getValue();

    foreach($para as $key => $value){

        $target_id = $value['target_id'];

        $paragraph = Paragraph::load($target_id);
        $para_service_id = $paragraph->field_service_name->target_id;

        if($para_service_id == $service_id){
            $remaining_qty = $paragraph->field_remaining_qty->value;
            $found_target_id = $target_id;
            $data = array('remaining_qty' => $remaining_qty, 'target_id' => $found_target_id );
            return $data;
        }
    }

    return $data;
}