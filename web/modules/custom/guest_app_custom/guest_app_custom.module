<?php

use Drupal\Core\Form\FormBase;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Component\Utility\UrlHelper;
use Drupal\views\Views;
use Drupal\node\Entity\Node;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Url;
use Drupal\paragraphs\Entity\Paragraph;

/*function hotel_inventory_getData($form_state){

	$current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    $hotel = $current_user->get('field_hotel')->first()->getValue()['target_id'];
    $final_service_term = $form_state->getValue('final_services');

    $arg[] = $hotel;
    $arg[] = $final_service_term;

    $view = Views::getView('hotel_inventory');
    $view->setArguments($arg);
    $view->setDisplay('hotel_inventory');
    $view->preExecute();
    $view->execute();
    $result = $view->result;

    return $result[0]->_entity;
}*/

function hotel_stock_remaining_quantity_and_target_id($form_state){

    /*
    $view = Views::getView('hotel_inventory_type');
       // $view->setArguments($arg);
        $view->setDisplay('page_1');
        $view->preExecute();
        $view->execute();
        $result = $view->result;
    kint($result[0]->_entity->field_hotel_rooms_quantity->getvalue());
    $data = $result[0]->_entity->field_hotel_rooms_quantity->getvalue();
    foreach($data as $key=>$value){
    kint(reset($value));
    }
    exit;
    */
    $data = [];
    $hotel_id = get_hotel_id();
    $service_id = $form_state->getValue('final_services');
    $node_data = hotel_inventory_data($hotel_id);
    $para = $node_data->field_quantity_by_service->getValue();
    foreach($para as $key => $value){
        $target_id = $value['target_id'];
        $paragraph = Paragraph::load($target_id);
        $para_service_id = $paragraph->field_service_name->target_id;
        if($para_service_id == $service_id){
            $remaining_qty = $paragraph->field_remaining_qty->value;
            $found_target_id = $target_id;
            $data = array('remaining_qty' => $remaining_qty, 'target_id' => $found_target_id );
            return $data;
        }
    }
    return $data;
}

//This provides hotel inventry node_load by hotel id
function hotel_inventory_data($hotel_id){
    $entity_ids = \Drupal::entityQuery('node')
      ->condition('type', 'hotel_inventory')
      ->condition('field_hotel_name', $hotel_id)
      ->execute();
    $hotel_nid = reset($entity_ids);//fetch first record in case of multiple
    return $node_data = \Drupal::entityManager()->getStorage('node')->load($hotel_nid);
}

// This provide hotel id of current user
function get_hotel_id(){
    $current_user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
    return $current_user->get('field_hotel')->first()->getValue()['target_id'];
}

function hotel_room_available_qty($hotel_id,$room_type){
    $data = [];
    $node_data = hotel_inventory_data($hotel_id);
    $para = $node_data->field_hotel_rooms_quantity->getValue();
    foreach($para as $key => $value){
        $target_id = $value['target_id'];
        $paragraph = Paragraph::load($target_id);
        $para_room_type = $paragraph->field_room_type->target_id;
        if($para_room_type == $room_type){
            $available_room_qty = $paragraph->get('field_remaining_room_quantity')->value;
            $data = array('remaining_qty' => $available_room_qty, 'paragraph' => $paragraph );
            return $data;
        }
    }
    return $data;
}

function blocked_rooms($hotel_id,$room_type,$start_date,$end_date){

    $query = \Drupal::database()->select('node', 'n');
    $query->fields('n', ['nid']);
    $query->join('node_field_data','fd','n.nid = fd.nid');
    $query->fields('fd');
    $query->join('node__field_hotel_id','hi','n.nid = hi.entity_id');
    $query->fields('hi');
    $query->join('node__field_upc_user_room_type','rt','n.nid = rt.entity_id');
    $query->fields('rt');
    $query->join('node__field_user_checkin_checkout_date','ch','n.nid = ch.entity_id');
    $query->fields('ch');
    $query->condition('n.type','upcoming_check_ins');
    $query->condition('fd.status',1,'=');
    $query->condition('hi.field_hotel_id_value',$hotel_id,'=');
    $query->condition('rt.field_upc_user_room_type_target_id',$room_type,'=');
    $query->condition('ch.field_user_checkin_checkout_date_value',$start_date,'>=');
    $query->condition('ch.field_user_checkin_checkout_date_end_value',$end_date,'<=');
    $node_arr = $query->execute()->fetchAll();

    return $node_arr;
}